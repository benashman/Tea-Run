var io = require("socket.io").listen(8080, {log: false}),
    connections = function () {

    var self = this;

    // properties

    self.users = {};

<<<<<<< HEAD
    	ben: {
    		name: "Ben",
    		avatar: "https://si0.twimg.com/profile_images/3020635145/e79e85c09c1d993900ca438b077b0f84.jpeg",
    		sugars: 2
    	},

    	saul: {
    		name: "Saul",
    		avatar: "https://si0.twimg.com/profile_images/2658881264/f21e01f199be65b193024b5e36ff4325.jpeg",
    		sugars: 1
    	},

    	sam: {
    		name: "Sam",
    		avatar: "https://si0.twimg.com/profile_images/2820637288/ee3f907313988d46f6dfb252f6697426.jpeg",
    		sugars: 1
    	}
=======
    self.rooms = {};

    // variables

    self.init = function () {

        self.createRoom(["test", "test2"]);

        console.log("Rooms: ", self.rooms);

        self.deleteRoom(["test", "test2"]);

        console.log("Rooms: ", self.rooms);

        self.setupSockets();
>>>>>>> 512cfdda12afdc6823c50e45b2aabfdca2dae38c

    };

    self.setupSockets = function () {

        io.sockets.on("connection", function (socket) {

            socket.join("home");

            // on joining, send a welcome message

            socket.emit("message", {

                message: "Connected to the socket!"

            });

            socket.on("brew", function (data) {

                console.log("Brew broadcast: ", data);

                io.sockets.in("home").emit("brew", data);

            });

        });

    };

    self.createRoom = function (name) {

        var room;

        if (typeof name === "object") {

            for (var i = 0, j = name.length; i < j; i++) {

                room = {

                    name: name[i]

                };

                self.rooms[name[i]] = room;

            }

        } else {

            room = {

                name: name

            };

            self.rooms[name] = room;

        }

    };

    self.getRoom = function (name) {

        return self.rooms[name];

    };

    self.roomExists = function (name) {

        var exists = self.rooms.hasOwnProperty(name);

        if (exists === true) {

            console.log("Debug: The room '" + name + "' exists.");

        } else {

            console.log("Debug: The room '" + name + "' does not exist.");

        }

        return exists;

    };

    self.deleteRoom = function (name) {

        var index;

        if (typeof name === "object") {

            for (var i = 0, j = name.length; i < j; i++) {

                if (self.roomExists(name[i]) === true) {

                    delete self.rooms[name[i]];

                }

            }

        } else {

            if (self.roomExists(name) === true) {

                delete self.rooms[name];

            }

        }

        // Loop through users

        for (var key in self.users) {

        	var user = self.users[key];

        	for (var prop in user) {

        		console.log(prop + " = " + user[prop]);

        	}

        }

    };

};

module.exports = connections;
